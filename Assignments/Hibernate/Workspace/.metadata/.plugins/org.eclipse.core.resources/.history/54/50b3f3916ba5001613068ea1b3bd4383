package com.hibernate.chatapp;

import java.io.File;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernatePersistence implements Persistence {

	static SessionFactory factory;

	static {
		Configuration configuration = new Configuration();
		configuration.configure(new File("src/Hibernate.cfg.xml"));
		factory = configuration.buildSessionFactory();
	}

	public boolean createChatroom(String name) {
		try {
			Session session = factory.openSession();
			session.beginTransaction();
			Chatroom chatroom = new Chatroom(name);
			session.save(chatroom);
			session.getTransaction().commit();
			session.flush();
			session.close();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	public Chatroom getChatroom(String name) {
		Chatroom c = null;
		Session session = factory.openSession();
		Query query  = session.createQuery("from chatroom c where c.name = " + name + "");
		List<Chatroom> chatooms = query.list();
		c = chatooms.get(0);
		session.flush();
		session.close();
		return c;
	}

	public boolean addUser(String name, String password, Chatroom chatroom) {
		try {
			Session session = factory.openSession();
			session.beginTransaction();
			User user = new User(name, password, chatroom);
			session.save(user);
			session.getTransaction().commit();
			session.flush();
			session.close();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

}
